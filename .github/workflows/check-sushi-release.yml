name: Check SUSHI Release

on:
  schedule:
    - cron: "0 3 * * *"
  workflow_dispatch:

permissions:
  contents: read
  packages: read

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      needs-build: ${{ steps.decision.outputs.needs-build }}
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Resolve latest SUSHI release
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(curl -fsSL \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/FHIR/sushi/releases/latest)
          tag=$(echo "$response" | jq -r '.tag_name')
          if [ -z "$tag" ] || [ "$tag" = "null" ]; then
            echo "Failed to fetch latest SUSHI release tag" >&2
            exit 1
          fi
          version=${tag#v}
          echo "Latest SUSHI release: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Check published image tags
        id: decision
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          VERSION: ${{ steps.release.outputs.version }}
        run: |
          owner=$(echo "$OWNER" | tr '[:upper:]' '[:lower:]')
          if ! response=$(curl -fsSL \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://ghcr.io/v2/$owner/igpublisher-devcontainer/tags/list"); then
            echo "needs-build=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          if echo "$response" | jq -r '.tags[]?' | grep -Fxq "sushi-$VERSION"; then
            echo "needs-build=false" >> "$GITHUB_OUTPUT"
          else
            echo "needs-build=true" >> "$GITHUB_OUTPUT"
          fi

  build:
    needs: check
    if: needs.check.outputs.needs-build == 'true'
    uses: ./.github/workflows/devcontainer-image.yml
    secrets: inherit
